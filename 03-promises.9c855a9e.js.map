{"mappings":"AAAA,MAAMA,EAAOC,SAASC,cAAc,SAIpC,SAASC,EAAcC,EAAUC,GAC/B,MAAMC,EAAgBC,KAAKC,SAAW,GACtC,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC7BC,aAAa,KACTN,EAEFI,EAAQ,C,SAACN,E,MAAUC,IAGnBM,EAAO,C,SAACP,E,MAAUC,GAAO,GAE1BA,EAAM,G,CAyBPL,EAAKa,iBAAiB,UArBxB,SAAmBC,GACjBA,EAAMC,iBAEN,MAAMC,EAAQC,OAAOjB,EAAKkB,SAASb,MAAMc,OACnCC,EAAOH,OAAOjB,EAAKkB,SAASE,KAAKD,OACvC,IAAK,IAAIE,EAAI,EAAGA,EAAIC,OAAQD,GAAK,EAAG,CAIpClB,EAHiBkB,EAAI,EACDL,EAAQI,EAAOC,GAGlCE,MAAK,EAACnB,SAAEA,EAAQC,MAAEA,MACjBmB,QAAQC,IAAI,uBAAqBrB,QAAiBC,MAAU,IAE7DqB,OAAM,EAACtB,SAAEA,EAAQC,MAAEA,MAClBmB,QAAQC,IAAI,sBAAoBrB,QAAeC,MAAU,G","sources":["src/js/03-promises.js"],"sourcesContent":["const form = document.querySelector(\".form\");\n\n\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  return new Promise((resolve, reject) =>{ \n  setInterval (()=> {\n  if (shouldResolve) {\n    // Fulfill\n    resolve({position, delay})\n  } else {\n    // Reject\n    reject({position, delay})\n  }\n}, delay)\n})\n}\n\nfunction onSubmit (event) {\n  event.preventDefault();\n\n  const delay = Number(form.elements.delay.value);\n  const step = Number(form.elements.step.value);  \n  for (let i = 0; i < amount; i += 1) {\n    let position = i + 1;\n    let actualDelay = delay + step * i;\n\n  createPromise(position, actualDelay)\n  .then(({ position, delay }) => {\n    console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n  })\n  .catch(({ position, delay }) => {\n    console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n  });\n\n  }\n}\n\n\n  form.addEventListener('submit', onSubmit);"],"names":["$47d4ff9957288465$var$form","document","querySelector","$47d4ff9957288465$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setInterval","addEventListener","event","preventDefault","delay1","Number","elements","value","step","i","amount","then","console","log","catch"],"version":3,"file":"03-promises.9c855a9e.js.map"}